{"version":3,"sources":["components/Logo/vision.svg","particlesConfig.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","particlesConfig","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","Navigation","_ref","initState","react_default","a","createElement","className","onClick","Logo","tilt_default","options","max","style","height","src","eye","alt","title","ImageLinkForm","onInputChange","onImageSubmit","placeholder","onChange","Rank","userName","userEntries","textAlign","fontSize","padding","concat","FaceRecognition","image","boxes","faceBoxes","length","map","box","i","key","position","border","top","top_row","bottom","bottom_row","left","left_col","right","right_col","display","justifyContent","alignItems","maxWidth","boxShadow","SignIn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","e","setState","email","target","onPasswordChange","password","onSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","state","then","res","json","status","props","loadUser","onRouteChange","alert","_this2","id","htmlFor","name","preventDefault","Component","Register","onNameChange","onRegister","user","App","input","route","bind","assertThisInitialized","data","Error","catch","error","console","particles_default","params","components_Register_Register","components_SignIn_SignIn","components_Navigation_Navigation","components_Logo_Logo","components_ImageLinkForm_ImageLinkForm","components_Rank_Rank","entries","components_FaceRecognition_FaceRecognition","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8eb2f4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vision.d2386874.svg\";","const particlesConfig = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 600\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#f00\"\r\n    },\r\n    shape: {\r\n      type: \"polygon\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#f00\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      }\r\n      // image: {\r\n      //   src: \"img/github.svg\",\r\n      //   width: 100,\r\n      //   height: 100\r\n      // }\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 120,\r\n      color: \"#000\",\r\n      opacity: 0.1,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 3,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: \"window\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"repulse\"\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\"\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 400,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n};\r\n\r\nexport default particlesConfig;\r\n","import React from \"react\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ initState }) => (\n  <nav className=\"Navigation\">\n    <p onClick={initState}>Sign Out</p>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\r\nimport \"./Logo.css\";\r\nimport Tilt from \"react-tilt\";\r\nimport eye from \"./vision.svg\";\r\n\r\nconst Logo = () => (\r\n  <div className=\"Logo\">\r\n    <Tilt\r\n      className=\"Tilt\"\r\n      options={{ max: 25 }}\r\n      style={{ height: 185, width: 185 }}\r\n    >\r\n      <img src={eye} alt=\"the digital eye\" title=\"Stop poking the eye!\" />\r\n    </Tilt>\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onImageSubmit }) => (\r\n  <div className=\"ImageLinkForm\">\r\n    <p>Face-Detect Eye v.0.1a</p>\r\n    <div className=\"imageInput\">\r\n      <input type=\"text\" placeholder=\"image url\" onChange={onInputChange} />\r\n      <button onClick={onImageSubmit}>Detect</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ userName, userEntries }) => (\r\n  <div\r\n    className=\"Rank\"\r\n    style={{ textAlign: \"center\", fontSize: \"1.4rem\", padding: \"20px\" }}\r\n  >\r\n    <div>{`${userName} No. of submissions: `}</div>\r\n    <div style={{ fontSize: \"1.5em\" }}>{`${userEntries}`}</div>\r\n  </div>\r\n);\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\n\r\nconst FaceRecognition = ({ image, boxes }) => {\r\n  let faceBoxes = [];\r\n\r\n  if (boxes.length) {\r\n    faceBoxes = boxes.map((box, i) => (\r\n      <div\r\n        key={i}\r\n        style={{\r\n          position: \"absolute\",\r\n          border: \"2px solid #ec173a\",\r\n          top: `${box.top_row * 100}%`,\r\n          bottom: `${(1 - box.bottom_row) * 100}%`,\r\n          left: `${box.left_col * 100}%`,\r\n          right: `${(1 - box.right_col) * 100}%`\r\n        }}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"FaceRecognition\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          maxWidth: \"80%\"\r\n        }}\r\n      >\r\n        <img\r\n          src={image}\r\n          alt=\"\"\r\n          style={{\r\n            width: \"100%\",\r\n            boxShadow: \"0px 0px 41px 3px rgba(0, 0, 0, 0.23)\"\r\n          }}\r\n        />\r\n        {faceBoxes}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\r\nimport \"./SignIn.css\";\r\n\r\nclass SignIn extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = e => this.setState({ email: e.target.value });\r\n\r\n  onPasswordChange = e => this.setState({ password: e.target.value });\r\n\r\n  onSignIn = () =>\r\n    fetch(\"http://localhost:5000/signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.status !== false) {\r\n          this.props.loadUser(res);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          alert(\"Bad username/Password\");\r\n        }\r\n      });\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div className=\"SignIn\">\r\n        <main className=\"pa4 black-80\">\r\n          <form className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"ph0 mh0 center\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db lh-copy\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db lh-copy\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                id=\"button\"\r\n                className=\"ph3 pv2 input-reset ba b--black bg-transparent grow pointer dib\"\r\n                type=\"submit\"\r\n                value=\"Sign In\"\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  this.onSignIn();\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                className=\"link dim black db\"\r\n                onClick={() => onRouteChange(\"register\")}\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\nimport \"./Register.css\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onNameChange = e => this.setState({ name: e.target.value });\r\n\r\n  onEmailChange = e => this.setState({ email: e.target.value });\r\n\r\n  onPasswordChange = e => this.setState({ password: e.target.value });\r\n\r\n  onRegister = () =>\r\n    this.state.name && this.state.email && this.state.password\r\n      ? fetch(\"http://localhost:5000/register\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            user: {\r\n              name: this.state.name,\r\n              email: this.state.email,\r\n              password: this.state.password\r\n            }\r\n          })\r\n        })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.id) {\r\n              this.props.loadUser(res);\r\n              this.props.onRouteChange(\"home\");\r\n            } else {\r\n              alert(\"Unable to register!\");\r\n            }\r\n          })\r\n      : alert(\"All fields are required\");\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div className=\"Register\">\r\n        <main className=\"pa4 black-80\">\r\n          <form className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"ph0 mh0 center\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db lh-copy\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db lh-copy\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db lh-copy\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                id=\"button\"\r\n                className=\"ph3 pv2 input-reset ba b--black bg-transparent grow pointer dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  // onRouteChange(\"home\");\r\n                  this.onRegister();\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                className=\"link dim black db\"\r\n                onClick={() => onRouteChange(\"signIn\")}\r\n              >\r\n                Sign In\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport particlesConfig from \"./particlesConfig\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Logo from \"./components/Logo/Logo\";\r\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\r\nimport Rank from \"./components/Rank/Rank\";\r\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\r\nimport SignIn from \"./components/SignIn/SignIn\";\r\nimport Register from \"./components/Register/Register\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      boxes: [],\r\n      route: \"signIn\",\r\n      user: {}\r\n    };\r\n    this.loadUser = this.loadUser.bind(this);\r\n    this.initState = this.initState.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onRouteChange = this.onRouteChange.bind(this);\r\n    this.onImageSubmit = this.onImageSubmit.bind(this);\r\n  }\r\n\r\n  loadUser(data) {\r\n    this.setState({ user: data });\r\n  }\r\n\r\n  initState() {\r\n    this.setState({\r\n      input: \"\",\r\n      boxes: [],\r\n      route: \"signIn\",\r\n      user: {}\r\n    });\r\n  }\r\n\r\n  onInputChange(e) {\r\n    this.setState({ input: e.target.value, boxes: [] });\r\n  }\r\n\r\n  onRouteChange(route) {\r\n    this.setState({ route: route });\r\n  }\r\n\r\n  onImageSubmit() {\r\n    fetch(\"http://localhost:5000/image\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.user.id,\r\n        input: this.state.input\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.user) {\r\n          this.setState({ boxes: data.boxes, user: data.user });\r\n        } else {\r\n          throw new Error(\"Face not found\");\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Bad Request!\", error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"Particles\" params={particlesConfig} />\r\n        {this.state.route === \"register\" ? (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        ) : this.state.route === \"signIn\" ? (\r\n          <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\r\n        ) : (\r\n          <div className=\"home\">\r\n            <Navigation initState={this.initState} />\r\n            <Logo />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onImageSubmit={this.onImageSubmit}\r\n            />\r\n            <Rank\r\n              userName={this.state.user.name}\r\n              userEntries={this.state.user.entries}\r\n            />\r\n            <FaceRecognition\r\n              image={this.state.input}\r\n              boxes={this.state.boxes}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}